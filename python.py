from telegram import InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, CallbackContext
from telegram import Update

# –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: CallbackContext) -> None:
    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É "üíé –°–¥–∞—Ç—å —Ç–æ–≤–∞—Ä üíé"
    keyboard = [[InlineKeyboardButton("üíé –°–¥–∞—Ç—å —Ç–æ–≤–∞—Ä üíé", callback_data="surrender_item")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π
    await update.message.reply_text(
        """
‚Äì –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –Ω–∞ –¥–µ–ø–æ–∑–∏—Ç?  
‚Äì –°—Ä–æ—á–Ω–æ –Ω—É–∂–Ω—ã –¥–µ–Ω—å–≥–∏?  
‚Äì –ù–∏–∫—Ç–æ –Ω–µ –¥–∞—ë—Ç –≤ –¥–æ–ª–≥?  

–ü—Ä–∏–º—É –ø–æ–¥ –∑–∞–ª–æ–≥ —Ç–≤–æ–∏ NFT, —Ñ–∏–∑. –Ω–æ–º–µ—Ä–∞ –∏ –º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ.  

–ë—ã—Å—Ç—Ä–∞—è –≤—ã–¥–∞—á–∞ –¥–µ–Ω–µ–≥ –ø–æ—Å–ª–µ –æ—Å–º–æ—Ç—Ä–∞, –ø—Ä–æ–≤–µ—Ä–∫–∏ –∏ –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–∞.  

–ü–∏—Å–∞—Ç—å ‚Äî @otrisovkin  
        """,
        reply_markup=reply_markup
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –Ω–∞ –∫–Ω–æ–ø–∫—É
async def button_handler(update: Update, context: CallbackContext) -> None:
    query = update.callback_query
    await query.answer()  # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –Ω–∞–∂–∞—Ç–∏–µ –∫–Ω–æ–ø–∫–∏

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫–∞–∫–∞—è –∫–Ω–æ–ø–∫–∞ –Ω–∞–∂–∞—Ç–∞
    if query.data == "surrender_item":
        await query.edit_message_text(
            "üíé –ü–æ –ø–æ–≤–æ–¥—É —Å–¥–∞—á–∏/–≤—ã–∫—É–ø–∞ —Ç–æ–≤–∞—Ä–∞ –æ–±—Ä–∞—â–∞—Ç—å—Å—è –∫ ‚Äî> @otrisovkin üíé"
        )

def main():
    # –í—Å—Ç–∞–≤—å—Ç–µ –≤–∞—à —Ç–æ–∫–µ–Ω
    TOKEN = "7879294195:AAFpD2kDI--oLPWFKTvUsHuNN7jEpLGbgrs"

    # –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥ –∏ –∫–Ω–æ–ø–æ–∫
    application.add_handler(CommandHandler("start", start))
    application.add_handler(CallbackQueryHandler(button_handler))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == '__main__':
    main()